#
# Cacti 
#   - 2018/02/12 : 1.1.34
#   - 2018/02/19 : 1.1.35
#

#- name: yum install cacti --enablerepo=epel-testing (cacti latest)
#  become: true
#  become_user: root
#  yum:
#    name: cacti
#    enablerepo: epel-testing
#    state: latest #installed
#  tags:
#    - cacti

- name: check cacti {{ cacti_install_version }} installed?
  become: true
  become_user: root
  stat:
    path: '{{ cacti_install_directory }}/cacti-{{ cacti_install_version }}'
  register: cacti_directory
  tags:
    - cacti
    - cacti-source

- name: download and unarchive cacti {{ cacti_install_version }} tar.gz
  become: true
  become_user: root
  unarchive:
    src: https://www.cacti.net/downloads/cacti-{{ cacti_install_version }}.tar.gz
    dest: '{{ cacti_install_directory }}'
    remote_src: yes
    owner: apache
    group: apache
  when: cacti_directory.stat.islnk is not defined
  tags:
    - cacti
    - cacti-source

- name: ln -s {{ cacti_install_directory }}/cacti-{{ cacti_install_version }} /var/www/html/cacti
  become: true
  become_user: root
  file:
    src: '{{ cacti_install_directory }}/cacti-{{ cacti_install_version }}'
    dest: '/var/www/html/cacti'
    state: link
    owner: apache
    group: apache
  #when: cacti_directory.stat.islnk is not defined
  tags:
    - cacti
    - cacti-source

- name: copy /etc/httpd/conf.d/cacti.conf
  become: true
  become_user: root
  template:
    src: httpd_cacti.conf.j2
    dest: /etc/httpd/conf.d/cacti.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart httpd
  tags:
    - cacti
    - cacti-source

# mysql cactiuser config
#
- name: copy /var/tmp/my.cnf
  become: true
  become_user: root
  template:
    src: my.cnf.j2
    dest: /var/tmp/my.cnf
    owner: root
    group: root
    mode: 0644
  tags:
    - cacti

# check if cacti tables exist?
- name: check mysql tables at cacti database
  become: true
  become_user: root
  shell: mysql --defaults-extra-file=/var/tmp/my.cnf -e "show tables from cacti;" | grep -Eo "snmpagent_mibs"
  register: mysql_cacti_tables
  changed_when: false
  failed_when: false
  tags:
    - cacti

- name: debug
  debug: var=mysql_cacti_tables
  tags:
    - cacti

- name: exec {{ cacti_install_directory}}/cacti-{{ cacti_install_version }}/cacti.sql on mysql
  become: true
  become_user: root
  shell: mysql --defaults-extra-file=/var/tmp/my.cnf cacti < {{ cacti_install_directory }}/cacti-{{ cacti_install_version }}/cacti.sql
  when: (mysql_cacti_tables.rc != 0 ) or (mysql_cacti_tables.stdout != "snmpagent_mibs")
  tags:
    - cacti

# for yum installed cacti
#- name: copy /etc/cacti/db.php
#  become: true
#  become_user: root
#  template:
#    src: db.php.j2
#    dest: /etc/cacti/db.php
#    owner: cacti
#    group: apache
#    mode: 0640
#  tags:
#    - cacti

- name: copy {{ cacti_install_directory }}/cacti-{{ cacti_install_version }}/include/config.php
  become: true
  become_user: root
  template:
    src: db.php.j2
    dest: '{{ cacti_install_directory }}/cacti-{{ cacti_install_version }}/include/config.php'
    owner: apache
    group: apache
    mode: 0664
  tags:
    - cacti
    - cacti-source

- name: check {{ cacti_spine_install_version }} installed? at /usr/local/spine/bin/spine
  become: true
  become_user: root
  command: 'bash -lc "/usr/local/spine/bin/spine --help | grep -Eo \"^SPINE [0-9\.]+\" | grep -Eo \"[0-9\.]+\""'
  register: spine_installed_version
  changed_when: false
  failed_when: false
  tags:
    - cacti
    - cacti-spine

- name: debug installed version
  debug: var=spine_installed_version
  tags:
    - cacti
    - cacti-spine

- name: yum install dependencies to make cacti spine
  become: true
  become_user: root
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - net-snmp-devel
    - help2man
  tags:
    - cacti
    #- cacti-spine

# see.
#   https://www.cacti.net/spine_download.php
#
- name: download and unarchive cacti spine {{ cacti_spine_install_version }} tar.gz
  become: true
  become_user: root
  unarchive:
    src: https://www.cacti.net/downloads/spine/cacti-spine-{{ cacti_spine_install_version }}.tar.gz
    dest: /var/tmp
    remote_src: yes
  when: (spine_installed_version.rc != 0) or (spine_installed_version.stdout != cacti_spine_install_version)
  tags:
    - cacti
    - cacti-spine

- name: configure, make, make install cacti spine {{ cacti_spine_install_version }} tar.gz
  become: true
  become_user: root
  shell: |
    cd /var/tmp/cacti-spine-'{{ cacti_spine_install_version }}'
    ./configure
    make clean
    make
    make install
  when: (spine_installed_version.rc != 0) or (spine_installed_version.stdout != cacti_spine_install_version)
  tags:
    - cacti
    - cacti-spine

- name: copy /usr/local/spine/etc/spine.conf
  become: true
  become_user: root
  template:
    src: spine.conf.j2
    dest: /usr/local/spine/etc/spine.conf
    owner: root
    group: root
    mode: 0644
  tags:
    - cacti
    - cacti-spine
